name: "Tests"

on:
  push:
    tags:
      - v**
    branches-ignore:
      - "dependabot/**"
      - "sourcery/**"
      - "pre-commit-ci-update-config"
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: ⏬ Check out repo
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: 🧰🏃‍♂️ Run pre-commit
        uses: pre-commit/action@v3.0.1

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: ⏬ Check out repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 🏗️ Install dependencies
        run: |
          pip install -U -r requirements_pinned.txt
          pip install ".[docs]"

      - name: 💬 Show installed dependencies
        run: |
          pip freeze

      - name: 👷📚 Build docs
        run: make --directory=docs clean html

  docs-link:
    runs-on: ubuntu-latest
    steps:
      - name: ⏬ Check out repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 🏗️ Install dependencies
        run: |
          pip install -U -q -r requirements_pinned.txt
          pip install ".[docs]"

      - name: 💬 Show installed dependencies
        continue-on-error: true
        run: |
          pip freeze

      - name: 👷📚 Build docs
        run: make --directory=docs clean linkcheck

  test:
    runs-on: ${{ matrix.os }}
    needs: [pre-commit, docs]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest, macos-12]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: ⏬ Check out repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🏗️ Install dependencies
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pip install -r requirements_pinned.txt
          python -m pip install ".[test]"

      - name: 💬 Show installed dependencies
        continue-on-error: true
        run: |
          pip freeze

      - name: 🧪 Run tests
        run: |
          python -m pytest --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests

      - name: Codecov Upload
        continue-on-error: true
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./coverage.xml
          name: ${{ matrix.os }}-py${{ matrix.python-version }}

      - name: 📦 Build wheel
        if: matrix.python-version == '3.9' && matrix.os != 'ubuntu-latest'
        run: |
          python -m pip install hatch
          hatch build -t wheel

      - name: 📦⬆️ Upload wheel
        if: matrix.python-version == '3.9' && matrix.os != 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: dist/*.whl

  build-manylinux:
    runs-on: ubuntu-latest
    needs: [pre-commit, docs]
    steps:
      - name: ⏬ Check out repo
        uses: actions/checkout@v4
      - name: 📦 Build wheel and test wheel
        run: |
          python -m pip install cibuildwheel==2.21.2
          python -m cibuildwheel --output-dir dist

      - name: 📦⬆️ Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-manylinux
          path: dist/*.whl

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test, build-manylinux]
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: ⏬ Check out repo
        uses: actions/checkout@v4

      - name: ⏬📦 Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheel-*
          merge-multiple: true

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 🏗️ Install dependencies
        run: python -m pip install -U hatch

      - name: 📦 Build sdist
        run: hatch build -t sdist

      - name: 🚀 Publish package
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          print-hash: true
          attestations: true
